
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tidyverse)
> library(epigrowthfit)
> library(shellpipes)
> library(stringr)
> 
> loadEnvironments()
> 
> fakewin <- data.frame(start = -Inf, end=Inf)
> 
> print(windows)
# A tibble: 17 × 4
   loc        phase start   end
   <chr>      <chr> <dbl> <dbl>
 1 Israel     1      -Inf   Inf
 2 Java       1      -Inf   Inf
 3 Kanagawa   1      -Inf   Inf
 4 Memphis    1      -Inf   Inf
 5 Mexico     1      -Inf   Inf
 6 NYcentral  1      -Inf   Inf
 7 NYcounties 1      -Inf   Inf
 8 NYcounties 2      -Inf   Inf
 9 Ngorongoro 1      -Inf   Inf
10 Selangor   1      -Inf   Inf
11 Serengeti  1      -Inf   Inf
12 Tokyo1     1      -Inf   Inf
13 Tokyo1     2      -Inf   Inf
14 Tokyo1     3      -Inf   Inf
15 Tokyo2     1      -Inf   Inf
16 Tokyo2     2      -Inf   Inf
17 Tokyo2     3      -Inf   Inf
> 
> egffun <- function(x){
+ 	## Drop the past-the-peak point for exponential
+ 	if(method=="Exponential"){
+ 		x <- (x
+ 			|> filter(offset < max(offset) | cases == max(cases))
+ 		)
+ 	}
+ 	x <- bind_rows(data.frame(offset = x$offset[[1]]-1
+ 		, cases = NA)
+ 	, x)
+ 	mod <- egf(model = egf_model(curve = method, family = "nbinom")
+ 		, data_ts = x
+ 		, formula_ts = cbind(offset, cases) ~ 1
+ 		, formula_parameters = ~ 1
+ 		, data_windows = fakewin
+ 		, formula_windows = cbind(start, end) ~ 1
+ 		, se = TRUE
+ 	) 
+ 	return(mod)
+ }     
> 
> r_ests <- function(x){
+ 	cf <- confint(x[[1]],probs=c(0.025,0.975))
+ 	df <- data.frame(lwr=exp(cf[["lower"]][[1]])
+  		, est = exp(cf[["estimate"]][[1]])
+ 		, upr = exp(cf[["upper"]][[1]])
+ 	)
+ 	return(df)
+ }
> 
> 
> ## Do we need map here? Why??
> ff <- (selected
+ 	%>% group_by(loc,phase)
+ 	%>% nest()
+ 	%>% mutate(egf_fit = map(data,~ egffun(.)))
+ )
> 
> print(ff)
# A tibble: 17 × 4
# Groups:   loc, phase [17]
   loc        phase data              egf_fit
   <chr>      <chr> <list>            <list> 
 1 Israel     1     <tibble [10 × 2]> <egf>  
 2 Java       1     <tibble [5 × 2]>  <egf>  
 3 Kanagawa   1     <tibble [9 × 2]>  <egf>  
 4 Memphis    1     <tibble [4 × 2]>  <egf>  
 5 Mexico     1     <tibble [6 × 2]>  <egf>  
 6 NYcentral  1     <tibble [8 × 2]>  <egf>  
 7 NYcounties 1     <tibble [7 × 2]>  <egf>  
 8 NYcounties 2     <tibble [7 × 2]>  <egf>  
 9 Ngorongoro 1     <tibble [11 × 2]> <egf>  
10 Selangor   1     <tibble [5 × 2]>  <egf>  
11 Serengeti  1     <tibble [15 × 2]> <egf>  
12 Tokyo1     1     <tibble [30 × 2]> <egf>  
13 Tokyo1     2     <tibble [19 × 2]> <egf>  
14 Tokyo1     3     <tibble [4 × 2]>  <egf>  
15 Tokyo2     1     <tibble [5 × 2]>  <egf>  
16 Tokyo2     2     <tibble [7 × 2]>  <egf>  
17 Tokyo2     3     <tibble [7 × 2]>  <egf>  
> 
> print(ff$egf_fit)
[[1]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  10 observations  
   1 fitting window
   1 time series   

[[2]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  5 observations  
  1 fitting window
  1 time series   

[[3]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  9 observations  
  1 fitting window
  1 time series   

[[4]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  4 observations  
  1 fitting window
  1 time series   

[[5]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  6 observations  
  1 fitting window
  1 time series   

[[6]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  8 observations  
  1 fitting window
  1 time series   

[[7]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  7 observations  
  1 fitting window
  1 time series   

[[8]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  7 observations  
  1 fitting window
  1 time series   

[[9]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  11 observations  
   1 fitting window
   1 time series   

[[10]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  5 observations  
  1 fitting window
  1 time series   

[[11]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  15 observations  
   1 fitting window
   1 time series   

[[12]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  30 observations  
   1 fitting window
   1 time series   

[[13]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  19 observations  
   1 fitting window
   1 time series   

[[14]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  4 observations  
  1 fitting window
  1 time series   

[[15]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  5 observations  
  1 fitting window
  1 time series   

[[16]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  7 observations  
  1 fitting window
  1 time series   

[[17]]
Top level nonlinear model ..............................................

  X(s, t) ~ dnbinom(mu = f(t) - f(s), size = disp)
  where
  f(t) = K/(1 + exp(-r * (t - tinfl)))

  $ curve      :"logistic"
  $ excess     :FALSE
  $ family     :"nbinom"
  $ day_of_week:0

Bottom level mixed effects model .......................................

      log(r) ~ 1
  log(tinfl) ~ 1
      log(K) ~ 1
   log(disp) ~ 1

Data ...................................................................

  7 observations  
  1 fitting window
  1 time series   

> 
> fulldat <-(ff
+ 	%>% group_by(loc,phase,egf_fit)
+ 	%>% reframe(r_ests(egf_fit))
+ 	%>% mutate(method=str_to_title(method))
+ )
> 
> print(fulldat)
# A tibble: 17 × 7
   loc        phase egf_fit    lwr    est    upr method  
   <chr>      <chr> <list>   <dbl>  <dbl>  <dbl> <chr>   
 1 Israel     1     <egf>   0.0887 0.144  0.235  Logistic
 2 Java       1     <egf>   0.662  1.18   2.12   Logistic
 3 Kanagawa   1     <egf>   0.0583 0.114  0.224  Logistic
 4 Memphis    1     <egf>   0.688  1.13   1.84   Logistic
 5 Mexico     1     <egf>   0.986  1.38   1.93   Logistic
 6 NYcentral  1     <egf>   0.500  0.717  1.03   Logistic
 7 NYcounties 1     <egf>   0.543  0.769  1.09   Logistic
 8 NYcounties 2     <egf>   0.681  0.861  1.09   Logistic
 9 Ngorongoro 1     <egf>   0.181  0.345  0.657  Logistic
10 Selangor   1     <egf>   0.423  0.788  1.47   Logistic
11 Serengeti  1     <egf>   0.132  0.249  0.470  Logistic
12 Tokyo1     1     <egf>   0.0332 0.0713 0.153  Logistic
13 Tokyo1     2     <egf>   0.0347 0.0555 0.0889 Logistic
14 Tokyo1     3     <egf>   0.644  1.08   1.82   Logistic
15 Tokyo2     1     <egf>   0.438  0.677  1.05   Logistic
16 Tokyo2     2     <egf>   0.430  0.571  0.757  Logistic
17 Tokyo2     3     <egf>   0.216  0.410  0.777  Logistic
> 
> rdsSave(fulldat)
> 
> 
